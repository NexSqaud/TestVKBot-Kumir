использовать HTTP
использовать Объект

| Константы HTTP
цел GET = 0
цел POST = 1

| Константы ВК
цел ОффсетБеседы = 2000000000

|| Настройка
цел идБота = 0
лит токен = ""

алг
нач
авторизация(токен)
запускПрослушивания(идБота)

объект события, событие, объектСобытия
цел i, длина

лит тип, текстСообщения
цел идНазначения, идОтправителя

нц
если естьСобытия
то
события := получитьСобытия
если не является_массивом(события)
то
вывод "updates не массив!", нс
выход
все
длина := длина_массива(события)
нц для i от 0 до длина - 1
событие := получить_поле(события, цвл(i))
если не есть_поле(событие, "type")
то
вывод "Нет type!", нс

иначе
если получить_лит(получить_поле(событие, "type")) = "message_new"
то
объектСобытия := получить_поле(событие, "object/message")
идНазначения := получить_цел(получить_поле(объектСобытия, "peer_id"))
идОтправителя := получить_цел(получить_поле(объектСобытия, "from_id"))
текстСообщения := получить_лит(получить_поле(объектСобытия, "text"))
если текстСообщения = "тест"
то
отправкаСообщения(идНазначения, "ТЕСТ ДЛЯ @id" + цвл(идОтправителя))
все
все
все
кц
все
ждать(10)
кц

кон

исп ВК
использовать HTTP
использовать Объект

| Константы HTTP
цел GET = 0
цел POST = 1

цел _ошибка = -1

запрос vk; vk := создать_запрос("https://api.vk.com/method/")

лит _токен
лит _версия = "5.131"

алг авторизация(лит токен)
нач
_токен := токен
кон

алг сменитьВерсиюВК(лит версия)
нач
_версия := версия
кон

алг объект запросВК(лит метод, рез цел ошибка)
нач
добавить_в_запрос(vk, "access_token", _токен)
добавить_в_запрос(vk, "v", _версия)

выполнить_запрос(vk, метод, GET)
нц пока не запрос_завершен(vk)
ждать(100)
кц

объект результат

если запрос_успешен(vk)
то
результат := объект_из_json(получить_ответ(vk))
иначе
знач := создать_объект
ошибка := 0
очистить_запрос(vk)
выход
все

если не есть_поле(результат, "response")
то
знач := результат
ошибка := получить_цел(получить_поле(результат, "error/error_code"))
иначе
знач := получить_поле(результат, "response")
ошибка := -1
все

если ошибка = -1
то
вывод "Успешно выполнен запрос ", метод, нс
|вывод объект_в_json(результат), нс
иначе
вывод "Ошибка при выполнении запроса ", метод, " номер: ", ошибка, нс
вывод "Текст ошибки: ", получить_лит(получить_поле(результат, "error/error_msg")), нс
|вывод объект_в_json(результат), нс
все
очистить_запрос(vk)
кон

алг отправкаСообщения(цел идНазначения, лит текст)
нач
добавить_в_запрос(vk, "peer_id", цвл(идНазначения))
добавить_в_запрос(vk, "message", текст)
добавить_в_запрос(vk, "random_id", цвл(0))

объект ответ
ответ := запросВК("messages.send", _ошибка)
кон

алг получитьСерверЛПБота(цел идГруппы, рез лит сервер, рез лит key, рез лит ts)
нач
добавить_в_запрос(vk, "group_id", цвл(идГруппы))

объект ответ
ответ := запросВК("groups.getLongPollServer", _ошибка)
если _ошибка = -1
то
сервер := получить_лит(получить_поле(ответ, "server"))
key := получить_лит(получить_поле(ответ, "key"))
ts := получить_лит(получить_поле(ответ, "ts"))
все
кон


кон исп

исп ЛПБота
использовать HTTP
использовать Объект

| Константы HTTP
цел GET = 0
цел POST = 1

запрос _запросЛП
объект _сервер; _сервер := создать_объект
цел _идГруппы

объект _последниеСобытия
лог _естьСобытия = нет

алг запускПрослушивания(цел идГруппы)
нач
лит сервер, key, ts
_идГруппы := идГруппы
получитьСерверЛПБота(идГруппы, сервер, key, ts)
сохранить_лит(_сервер, "server", сервер)
сохранить_лит(_сервер, "key", key)
сохранить_лит(_сервер, "ts", ts)

инициализацияЗапроса

выполнить_запрос(_запросЛП, "", GET)
кон

алг лог естьСобытия
нач
объект тело
цел ошибка
лит сервер, key, ts
если запрос_завершен(_запросЛП)
то
если запрос_успешен(_запросЛП)
то
тело := объект_из_json(получить_ответ(_запросЛП))
если есть_поле(тело, "failed")
то
ошибка := получить_цел(получить_поле(тело, "failed"))
выбор
при ошибка = 1:
|сохранить_лит(_сервер, "ts", получить_лит(получить_поле(тело, "ts")))
при ошибка = 2 или ошибка = 3:
получитьСерверЛПБота(_идГруппы, сервер, key, ts)
сохранить_лит(_сервер, "server", сервер)
сохранить_лит(_сервер, "key", key)
сохранить_лит(_сервер, "ts", ts)
обновитьЗапрос
иначе
вывод "Ошибка ЛП: Неизвестный код ошибки - ", ошибка, ", запрашиваю новую информацию...", нс
получитьСерверЛПБота(_идГруппы, сервер, key, ts)
сохранить_лит(_сервер, "server", сервер)
сохранить_лит(_сервер, "key", key)
сохранить_лит(_сервер, "ts", ts)
обновитьЗапрос
все
иначе
если есть_поле(тело, "updates")
то
знач := да
_естьСобытия := да
_последниеСобытия := получить_поле(тело, "updates")
иначе 
знач := нет
все
все
сохранить_лит(_сервер, "ts", получить_лит(получить_поле(тело, "ts")))
обновитьЗапрос
выполнить_запрос(_запросЛП, "", GET)
иначе
знач := нет
вывод "Ошибка ЛП: Неуспешный запрос", нс
все
иначе
знач := нет
все
кон

алг объект получитьСобытия
нач
если _естьСобытия
то
знач := _последниеСобытия
_естьСобытия := нет
иначе
вывод "Ошибка ЛП: Попытка получить отсутствующие события", нс
все
кон

алг инициализацияЗапроса
нач
лит сервер
лит key
лит ts

если не есть_поле(_сервер, "server") или не есть_поле(_сервер, "key") или не есть_поле(_сервер, "ts")
то
вывод "ОШИБКА ЛП: Не найдены параметры севрера", нс
выход
иначе
сервер := получить_лит(получить_поле(_сервер, "server"))
key := получить_лит(получить_поле(_сервер, "key"))
ts := получить_лит(получить_поле(_сервер, "ts"))
все

_запросЛП := создать_запрос(сервер)
добавить_в_запрос(_запросЛП, "act", "a_check")
добавить_в_запрос(_запросЛП, "key", key)
добавить_в_запрос(_запросЛП, "ts", ts)
добавить_в_запрос(_запросЛП, "wait", цвл(30))

вывод "Обновлены данные сервера ЛП", нс
кон

алг обновитьЗапрос
нач
лит сервер
лит key
лит ts

если не есть_поле(_сервер, "server") или не есть_поле(_сервер, "key") или не есть_поле(_сервер, "ts")
то
вывод "ОШИБКА ЛП: Не найдены параметры севрера", нс
выход
иначе
сервер := получить_лит(получить_поле(_сервер, "server"))
key := получить_лит(получить_поле(_сервер, "key"))
ts := получить_лит(получить_поле(_сервер, "ts"))
все

очистить_запрос(_запросЛП)
добавить_в_запрос(_запросЛП, "act", "a_check")
добавить_в_запрос(_запросЛП, "key", key)
добавить_в_запрос(_запросЛП, "ts", ts)
добавить_в_запрос(_запросЛП, "wait", цвл(30))

вывод "Обновлены данные сервера ЛП", нс
кон


кон исп


исп Утилиты

алг лит цвл(цел число)
нач
знач := цел_в_лит(число)
кон

кон исп
